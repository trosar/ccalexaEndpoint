{
  "_args": [
    [
      {
        "raw": "dtslint@github:microsoft/dtslint#production",
        "scope": null,
        "escapedName": "dtslint",
        "name": "dtslint",
        "rawSpec": "github:microsoft/dtslint#production",
        "spec": "github:microsoft/dtslint#production",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:microsoft/dtslint.git#production",
          "sshUrl": "git+ssh://git@github.com/microsoft/dtslint.git#production",
          "httpsUrl": "git+https://github.com/microsoft/dtslint.git#production",
          "gitUrl": "git://github.com/microsoft/dtslint.git#production",
          "shortcut": "github:microsoft/dtslint#production",
          "directUrl": "https://raw.githubusercontent.com/microsoft/dtslint/production/package.json"
        }
      },
      "C:\\Thomas\\github\\ccalexaEndpoint\\node_modules\\alexa-app"
    ]
  ],
  "_from": "microsoft/dtslint#production",
  "_id": "dtslint@0.1.2",
  "_inCache": true,
  "_location": "/dtslint",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dtslint@github:microsoft/dtslint#production",
    "scope": null,
    "escapedName": "dtslint",
    "name": "dtslint",
    "rawSpec": "github:microsoft/dtslint#production",
    "spec": "github:microsoft/dtslint#production",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:microsoft/dtslint.git#production",
      "sshUrl": "git+ssh://git@github.com/microsoft/dtslint.git#production",
      "httpsUrl": "git+https://github.com/microsoft/dtslint.git#production",
      "gitUrl": "git://github.com/microsoft/dtslint.git#production",
      "shortcut": "github:microsoft/dtslint#production",
      "directUrl": "https://raw.githubusercontent.com/microsoft/dtslint/production/package.json"
    }
  },
  "_requiredBy": [
    "/alexa-app"
  ],
  "_resolved": "git+https://github.com/microsoft/dtslint.git#6b2f52f28cbd0a9380f17437c54be3f1d6fa0028",
  "_shasum": "e356966873ba9009b17feeed4279d6957e571eec",
  "_shrinkwrap": null,
  "_spec": "dtslint@github:microsoft/dtslint#production",
  "_where": "C:\\Thomas\\github\\ccalexaEndpoint\\node_modules\\alexa-app",
  "bin": {
    "dtslint": "./bin/index.js"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/dtslint/issues"
  },
  "contributors": [
    {
      "name": "Andy Hanson",
      "email": "andy-ms@microsoft.com",
      "url": "https://github.com/andy-ms"
    },
    {
      "name": "Dan Vanderkam",
      "email": "danvdk@gmail.com",
      "url": "https://github.com/danvk"
    }
  ],
  "dependencies": {
    "definitelytyped-header-parser": "github:microsoft/definitelytyped-header-parser#production",
    "fs-promise": "^2.0.0",
    "strip-json-comments": "^2.0.1",
    "tslint": "^5.4.2",
    "typescript": "next"
  },
  "description": "Runs tests on TypeScript definition files",
  "devDependencies": {
    "@types/fs-extra": "^2.0.0",
    "@types/mz": "0.0.30",
    "@types/node": "^7.0.5",
    "@types/parsimmon": "^1.0.3",
    "@types/strip-json-comments": "^0.0.28"
  },
  "engines": {
    "node": ">=6.10.0"
  },
  "files": [
    "bin",
    "dt.json",
    "dtslint.json"
  ],
  "gitHead": "6b2f52f28cbd0a9380f17437c54be3f1d6fa0028",
  "homepage": "https://github.com/Microsoft/dtslint#readme",
  "license": "MIT",
  "main": "bin",
  "name": "dtslint",
  "optionalDependencies": {},
  "readme": "`dtslint` tests a TypeScript declaration file for style and correctness.\r\nIt will install `typescript` and `tslint` for you, so this is the only tool you need to test a type definition.\r\n\r\nLint rules new to dtslint are documented in the [docs](docs) directory.\r\n\r\n# Setup\r\n\r\nIf you are working on DefinitelyTyped, read the [DefinitelyTyped README](https://github.com/DefinitelyTyped/DefinitelyTyped#readme).\r\n\r\nIf you are writing the library in TypeScript, don't use `dtslint`.\r\nUse [`--declaration`](http://www.typescriptlang.org/docs/handbook/compiler-options.html) to have type definitions generated for you.\r\n\r\nIf you are a library author, read below.\r\n\r\n\r\n## Add types for a library (not on DefinitelyTyped)\r\n\r\n[`dts-gen`](https://github.com/Microsoft/dts-gen#readme) may help, but is not required.\r\n\r\nCreate a `types` directory. (Name is arbitrary.)\r\nAdd `\"types\": \"types\"` to your `package.json`.\r\nRead more on bundling types [here](http://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html).\r\n\r\n\r\n#### `types/index.d.ts`\r\n\r\nOnly `index.d.ts` needs to be published to NPM. Other files are just for testing.\r\nWrite your type definitions here.\r\nRefer to the [handbook](http://www.typescriptlang.org/docs/handbook/declaration-files/introduction.html) or `dts-gen`'s templates for how to do this.\r\n\r\n\r\n#### `types/tsconfig.json`\r\n\r\n```ts\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"commonjs\",\r\n        \"lib\": [\"es6\"],\r\n        \"noImplicitAny\": true,\r\n        \"noImplicitThis\": true,\r\n        \"strictNullChecks\": true,\r\n\r\n        // If the library is an external module (uses `export`), this allows your test file to import \"mylib\" instead of \"./index\".\r\n        // If the library is global (cannot be imported via `import` or `require`), leave this out.\r\n        \"baseUrl\": \".\",\r\n        \"paths\": { \"mylib\": [\".\"] }\r\n    }\r\n}\r\n```\r\n\r\nYou may extend `\"lib\"` to, for example, `[\"es6\", \"dom\"]` if you need those typings.\r\nYou may also have add `\"target\": \"es6\"` if using certain language features.\r\n\r\n\r\n#### `types/tslint.json`\r\n\r\nIf you are using the default rules, this is optional.\r\n\r\nIf present, this will override `dtslint`'s [default](https://github.com/Microsoft/dtslint/blob/master/dtslint.json) settings.\r\nYou can specify new lint [rules](https://palantir.github.io/tslint/rules/), or disable some. An example:\r\n\r\n```json\r\n{\r\n    \"extends\": \"dtslint/dtslint.json\",\r\n    \"rules\": {\r\n        \"semicolon\": false,\r\n        \"indent\": [true, \"tabs\"]\r\n    }\r\n}\r\n```\r\n\r\n\r\n#### `types/test.ts`\r\n\r\nYou can have any number of test files you want, with any names. See below on what to put in them.\r\n\r\n\r\n\r\n## Write tests\r\n\r\nA test file should be a piece of sample code that tests using the library. Tests are type-checked, but not run.\r\nTo assert that an expression is of a given type, use `$ExpectType`.\r\nTo assert that an expression causes a compile error, use `$ExpectError`.\r\n(Assertions will be checked by the `expect` lint rule.)\r\n\r\n```ts\r\nimport { f } from \"my-lib\"; // f is(n: number) => void\r\n\r\n// $ExpectType void\r\nf(1);\r\n\r\n// Can also write the assertion on the same line.\r\nf(2); // $ExpectType void\r\n\r\n// $ExpectError\r\nf(\"one\");\r\n```\r\n\r\n\r\n## Specify a TypeScript version\r\n\r\nNormally packages will be tested using TypeScript 2.0.\r\nTo use a newer version, specify it by including a comment like so:\r\n\r\n```ts\r\n// TypeScript Version: 2.1\r\n```\r\n\r\nFor DefinitelyTyped packages, this should go just under the header (on line 5).\r\nFor bundled typings, this can go on any line (but should be near the top).\r\n\r\n\r\n## Run tests\r\n\r\n- `npm install --save-dev dtslint`\r\n- Add to your `package.json` `scripts`: `\"dtslint\": \"dtslint types\"`\r\n- `npm run dtslint`\r\n\r\n\r\n# Contributing\r\n\r\n## Build\r\n\r\n```sh\r\nnpm link . # Global 'dts-lint' should now refer to this.\r\nnpm run watch\r\n```\r\n\r\nNote: If changing a lint rule, you will have to `dtslint --clean` because rules are copied into install directories.\r\n\r\n## Test\r\n\r\nUse `npm run test` to run all tests.\r\nTo run a single test: `node node_modules/tslint/bin/tslint --rulesDirectory bin/rules --test test/expect`.\r\n\r\n\r\n## Publish\r\n\r\n#### `production` branch\r\n\r\n```sh\r\ngit checkout production\r\ngit merge master\r\nnpm run build\r\ngit add --all\r\ngit commit -m \"Update bin/\"\r\ngit push\r\n```\r\n\r\nThe `production` branch is a dependency of [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped) and [types-publisher](https://github.com/Microsoft/types-publisher).\r\n\r\n#### NPM\r\n\r\nTODO\r\n\r\n\r\n## Code of Conduct\r\n\r\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Microsoft/dtslint.git"
  },
  "scripts": {
    "build": "tsc",
    "lint": "tslint --project tsconfig.json --type-check --format stylish",
    "test": "node test/test.js",
    "watch": "tsc --watch"
  },
  "version": "0.1.2"
}
